difficulty <- card_feedback_items[[2]]$findElement(using="xpath", ".//div[starts-with(@class, 'CardFeedback__CardFeedbackNumber')]")$getElementText() %>%
unlist()
percentage <- str_extract(percentage, "\\d+%")
difficulty <- str_extract(difficulty, "\\d+(\\.\\d+)?")
} else {
percentage <- NA
difficulty <- NA
}
percentage
difficulty
first_card <- teacher_cards[[1]]
card_feedback <- first_card$findElement(using="xpath", ".//div[starts-with(@class, 'CardFeedback__StyledCardFeedback')]")
# Extract all feedback items (should return 2 elements: one for percentage, one for difficulty)
card_feedback_items <- card_feedback$findElements(using="xpath", ".//div[starts-with(@class, 'CardFeedback__CardFeedbackItem')]")
# Extract percentage and difficulty
if (length(card_feedback_items) >= 2) {
percentage <- card_feedback_items[[1]]$findElement(using="xpath", ".//div[starts-with(@class, 'CardFeedback__CardFeedbackNumber')]")$getElementText() %>%
unlist()
difficulty <- card_feedback_items[[2]]$findElement(using="xpath", ".//div[starts-with(@class, 'CardFeedback__CardFeedbackNumber')]")$getElementText() %>%
unlist()
percentage <- str_extract(percentage, "\\d+%") %>%
unlist() %>%
numeric()
difficulty <- str_extract(difficulty, "\\d+(\\.\\d+)?")
} else {
percentage <- NA
difficulty <- NA
}
first_card <- teacher_cards[[1]]
card_feedback <- first_card$findElement(using="xpath", ".//div[starts-with(@class, 'CardFeedback__StyledCardFeedback')]")
# Extract all feedback items (should return 2 elements: one for percentage, one for difficulty)
card_feedback_items <- card_feedback$findElements(using="xpath", ".//div[starts-with(@class, 'CardFeedback__CardFeedbackItem')]")
# Extract percentage and difficulty
if (length(card_feedback_items) >= 2) {
percentage <- card_feedback_items[[1]]$findElement(using="xpath", ".//div[starts-with(@class, 'CardFeedback__CardFeedbackNumber')]")$getElementText() %>%
unlist()
difficulty <- card_feedback_items[[2]]$findElement(using="xpath", ".//div[starts-with(@class, 'CardFeedback__CardFeedbackNumber')]")$getElementText() %>%
unlist()
percentage <- str_extract(percentage, "\\d+%") %>%
unlist() %>%
str_remove("%") %>%
numeric()
difficulty <- str_extract(difficulty, "\\d+(\\.\\d+)?")
} else {
percentage <- NA
difficulty <- NA
}
percentage
difficulty
first_card <- teacher_cards[[1]]
card_feedback <- first_card$findElement(using="xpath", ".//div[starts-with(@class, 'CardFeedback__StyledCardFeedback')]")
# Extract all feedback items (should return 2 elements: one for percentage, one for difficulty)
card_feedback_items <- card_feedback$findElements(using="xpath", ".//div[starts-with(@class, 'CardFeedback__CardFeedbackItem')]")
# Extract percentage and difficulty
if (length(card_feedback_items) >= 2) {
percentage <- card_feedback_items[[1]]$findElement(using="xpath", ".//div[starts-with(@class, 'CardFeedback__CardFeedbackNumber')]")$getElementText() %>%
unlist()
difficulty <- card_feedback_items[[2]]$findElement(using="xpath", ".//div[starts-with(@class, 'CardFeedback__CardFeedbackNumber')]")$getElementText() %>%
unlist()
percentage <- str_extract(percentage, "\\d+%")
difficulty <- str_extract(difficulty, "\\d+(\\.\\d+)?") %>%
unlist() %>%
numeric()
} else {
percentage <- NA
difficulty <- NA
}
percentage
difficulty
first_card <- teacher_cards[[1]]
rating_count <- first_card$findChildElement(using="xpath","(.//div[starts-with(@class,'CardNumRating__CardNumRatingCount')])")$getElementText() %>%
unlist()
rating_count
first_card <- teacher_cards[[1]]
rating_count <- first_card$findChildElement(using="xpath","(.//div[starts-with(@class,'CardNumRating__CardNumRatingCount')])")$getElementText() %>%
unlist() %>%
str_extract("[:digit:]+") %>%
numeric()
rating_count
first_card <- teacher_cards[[1]]
rating_count <- first_card$findChildElement(using="xpath","(.//div[starts-with(@class,'CardNumRating__CardNumRatingCount')])")$getElementText() %>%
str_extract("[:digit:]+") %>%
numeric()
rating_count
first_card <- teacher_cards[[1]]
rating_count <- first_card$findChildElement(using="xpath","(.//div[starts-with(@class,'CardNumRating__CardNumRatingCount')])")$getElementText() %>%
numeric()
first_card <- teacher_cards[[1]]
rating_count <- first_card$findChildElement(using="xpath","(.//div[starts-with(@class,'CardNumRating__CardNumRatingCount')])")$getElementText()
rating_count
View(rating_count)
first_card <- teacher_cards[[1]]
rating_count <- first_card$findChildElement(using="xpath","(.//div[starts-with(@class,'CardNumRating__CardNumRatingCount')])")$getElementText()
rating_count <- rating_count[[1]] %>%
unlist() %>%
str_extract("[:digit:]+") %>%
numeric()
rating_count
first_card <- teacher_cards[[1]]
rating_count <- first_card$findChildElement(using="xpath","(.//div[starts-with(@class,'CardNumRating__CardNumRatingCount')])")$getElementText()
rating_count
first_card <- teacher_cards[[1]]
rating_count <- first_card$findChildElement(using="xpath","(.//div[starts-with(@class,'CardNumRating__CardNumRatingCount')])")$getElementText()
rating_count
rating_count_numeric <- rating_count[[1]] %>%
unlist() %>%
str_extract("[:digit:]+") %>%
numeric()
rating_count_numeric
first_card <- teacher_cards[[1]]
rating_count <- first_card$findChildElement(using="xpath","(.//div[starts-with(@class,'CardNumRating__CardNumRatingCount')])")$getElementText()
rating_count
rating_count_numeric <- rating_count[[1]] %>%
unlist() %>%
str_extract("\\d+") %>%
numeric()
rating_count_numeric
first_card <- teacher_cards[[1]]
rating_count <- first_card$findChildElement(using="xpath","(.//div[starts-with(@class,'CardNumRating__CardNumRatingCount')])")$getElementText()
rating_count
rating_count_numeric <- rating_count[[1]]
rating_count_numeric
first_card <- teacher_cards[[1]]
rating_count <- first_card$findChildElement(using="xpath","(.//div[starts-with(@class,'CardNumRating__CardNumRatingCount')])")$getElementText()
rating_count
rating_count_text <- rating_count[[1]]
rating_count_numeric <- rating_count_text %>%
str_extract("\\d+") %>%  # Extracts only the numeric part
as.numeric()
rating_count_numeric
first_card <- teacher_cards[[1]]
rating_count <- first_card$findChildElement(using="xpath","(.//div[starts-with(@class,'CardNumRating__CardNumRatingCount')])")$getElementText()
rating_count
rating_count_text <- rating_count[[1]] %>%
str_extract("\\d+") %>%  # Extracts only the numeric part
as.numeric()
rating_count_numeric
first_card <- teacher_cards[[1]]
prof_url <- first_card$getElementAttribute("href") %>%
unlist()
prof_url
first_card <- teacher_cards[[1]]
prof_url <- first_card$getElementAttribute("href") %>%
unlist() %>%
str_extract("\\d+")
prof_url
collect_prof <- function(card) {
prof_id <- card$getElementAttribute("href") %>%
unlist() %>%
str_extract("\\d+")
prof_name <- card$findChildElement(using="xpath","(.//div[starts-with(@class, 'CardName__StyledCardName')])")$getElementText() %>%
unlist()
quality <- card$findChildElement(using="xpath","(.//div[starts-with(@class, 'CardNumRating__CardNumRatingNumber')])")$getElementText() %>%
unlist() %>%
as.numeric()
card_feedback <- first_card$findElement(using="xpath", ".//div[starts-with(@class, 'CardFeedback__StyledCardFeedback')]")
card_feedback_items <- card_feedback$findElements(using="xpath", ".//div[starts-with(@class, 'CardFeedback__CardFeedbackItem')]")
card_feedback_items_text <- card_feedback_items[[1]]$findElement(using="xpath", ".//div[starts-with(@class, 'CardFeedback__CardFeedbackNumber')]")$getElementText() %>%
unlist()
take_again <- str_extract(card_feedback_items_text, "\\d+%")
difficulty <- str_extract(card_feedback_items_text, "\\d+(\\.\\d+)?")
rating_count <- card$findChildElement(using="xpath","(.//div[starts-with(@class,'CardNumRating__CardNumRatingCount')])")$getElementText()
rating_count_numeric <- rating_count[[1]] %>%
str_extract("\\d+") %>%
as.numeric()
return(list(Professor_ID = prof_id,
Professor_Name = prof_name,
Quality = quality,
TakeAgain = take_again,
Difficulty = difficulty,
RatingCount = rating_count_numeric))
}
prof_info <- teacher_cards %>% map_dfr(~collect_prof(.))
all_profs <- bind_rows(all_profs,prof_info)
View(prof_info)
View(card_feedback_item)
collect_prof <- function(card) {
prof_id <- card$getElementAttribute("href") %>%
unlist() %>%
str_extract("\\d+")
prof_name <- card$findChildElement(using="xpath","(.//div[starts-with(@class, 'CardName__StyledCardName')])")$getElementText() %>%
unlist()
quality <- card$findChildElement(using="xpath","(.//div[starts-with(@class, 'CardNumRating__CardNumRatingNumber')])")$getElementText() %>%
unlist() %>%
as.numeric()
card_feedback <- card$findElement(using="xpath", ".//div[starts-with(@class, 'CardFeedback__StyledCardFeedback')]")
card_feedback_items <- card_feedback$findElements(using="xpath", ".//div[starts-with(@class, 'CardFeedback__CardFeedbackItem')]")
card_feedback_items_text <- card_feedback_items[[1]]$findElement(using="xpath", ".//div[starts-with(@class, 'CardFeedback__CardFeedbackNumber')]")$getElementText() %>%
unlist()
take_again <- str_extract(card_feedback_items_text, "\\d+%")
difficulty <- str_extract(card_feedback_items_text, "\\d+(\\.\\d+)?")
rating_count <- card$findChildElement(using="xpath","(.//div[starts-with(@class,'CardNumRating__CardNumRatingCount')])")$getElementText()
rating_count_numeric <- rating_count[[1]] %>%
str_extract("\\d+") %>%
as.numeric()
return(list(Professor_ID = prof_id,
Professor_Name = prof_name,
Quality = quality,
TakeAgain = take_again,
Difficulty = difficulty,
RatingCount = rating_count_numeric))
}
prof_info <- teacher_cards %>% map_dfr(~collect_prof(.))
all_profs <- bind_rows(all_profs,prof_info)
View(prof_info)
first_card <- teacher_cards[[1]]
card_feedback <- first_card$findElement(using="xpath", ".//div[starts-with(@class, 'CardFeedback__StyledCardFeedback')]")
card_feedback_items <- card_feedback$findElements(using="xpath", ".//div[starts-with(@class, 'CardFeedback__CardFeedbackItem')]")
card_feedback_items_text <- card_feedback_items[[1]]$findElement(using="xpath", ".//div[starts-with(@class, 'CardFeedback__CardFeedbackNumber')]")$getElementText() %>%
unlist()
take_again <- str_extract(card_feedback_items_text, "\\d+%")
difficulty <- str_extract(card_feedback_items_text, "\\d+(\\.\\d+)?")
first_card <- teacher_cards[[1]]
card_feedback <- first_card$findElement(using="xpath", ".//div[starts-with(@class, 'CardFeedback__StyledCardFeedback')]")
card_feedback_items <- card_feedback$findElements(using="xpath", ".//div[starts-with(@class, 'CardFeedback__CardFeedbackItem')]")
card_feedback_items_text <- card_feedback_items[[1]]$findElement(using="xpath", ".//div[starts-with(@class, 'CardFeedback__CardFeedbackNumber')]")$getElementText() %>%
unlist()
take_again <- str_extract(card_feedback_items_text, "\\d+%")
difficulty <- str_extract(card_feedback_items_text, "\\d+(\\.\\d+)?")
card_feedback_items_text
difficulty
collect_prof <- function(card) {
prof_id <- card$getElementAttribute("href") %>%
unlist() %>%
str_extract("\\d+")
prof_name <- card$findChildElement(using="xpath","(.//div[starts-with(@class, 'CardName__StyledCardName')])")$getElementText() %>%
unlist()
quality <- card$findChildElement(using="xpath","(.//div[starts-with(@class, 'CardNumRating__CardNumRatingNumber')])")$getElementText() %>%
unlist() %>%
as.numeric()
card_feedback <- card$findElement(using="xpath", ".//div[starts-with(@class, 'CardFeedback__StyledCardFeedback')]")
card_feedback_items <- card_feedback$findElements(using="xpath", ".//div[starts-with(@class, 'CardFeedback__CardFeedbackItem')]")
card_feedback_items_text <- card_feedback_items[[1]]$findElement(using="xpath", ".//div[starts-with(@class, 'CardFeedback__CardFeedbackNumber')]")$getElementText() %>%
unlist()
take_again <- str_extract(card_feedback_items_text, "\\d+%")
rating_count <- card$findChildElement(using="xpath","(.//div[starts-with(@class,'CardNumRating__CardNumRatingCount')])")$getElementText()
rating_count_numeric <- rating_count[[1]] %>%
str_extract("\\d+") %>%
as.numeric()
return(list(Professor_ID = prof_id,
Professor_Name = prof_name,
Quality = quality,
TakeAgain = take_again,
Difficulty = difficulty,
RatingCount = rating_count_numeric))
}
prof_info <- teacher_cards %>% map_dfr(~collect_prof(.))
all_profs <- bind_rows(all_profs,prof_info)
View(prof_info)
collect_prof <- function(card) {
prof_id <- card$getElementAttribute("href") %>%
unlist() %>%
str_extract("\\d+")
prof_name <- card$findChildElement(using="xpath","(.//div[starts-with(@class, 'CardName__StyledCardName')])")$getElementText() %>%
unlist()
quality <- card$findChildElement(using="xpath","(.//div[starts-with(@class, 'CardNumRating__CardNumRatingNumber')])")$getElementText() %>%
unlist() %>%
as.numeric()
card_feedback <- card$findElement(using="xpath", ".//div[starts-with(@class, 'CardFeedback__StyledCardFeedback')]")
card_feedback_items <- card_feedback$findElements(using="xpath", ".//div[starts-with(@class, 'CardFeedback__CardFeedbackItem')]")
card_feedback_items_text <- card_feedback_items[[1]]$findElement(using="xpath", ".//div[starts-with(@class, 'CardFeedback__CardFeedbackNumber')]")$getElementText() %>%
unlist()
take_again <- str_extract(card_feedback_items_text, "\\d+%")
rating_count <- card$findChildElement(using="xpath","(.//div[starts-with(@class,'CardNumRating__CardNumRatingCount')])")$getElementText()
rating_count_numeric <- rating_count[[1]] %>%
str_extract("\\d+") %>%
as.numeric()
return(list(Professor_ID = prof_id,
Professor_Name = prof_name,
Quality = quality,
TakeAgain = take_again,
RatingCount = rating_count_numeric))
}
prof_info <- teacher_cards %>% map_dfr(~collect_prof(.))
all_profs <- bind_rows(all_profs,prof_info)
prof_info <- teacher_cards %>% map_dfr(~collect_prof(.))
View(prof_info)
View(prof_info)
remote_driver_object$server$stop()
library(tidyverse)
library(RSelenium)
library(netstat)
Sys.setlocale("LC_ALL", "English_United States.1252")
remote_driver_object <- rsDriver(browser= "firefox",
chromever= NULL,
verbose= F,
port= free_port())
remDr <- remote_driver_object$client
remDr$navigate("https://www.ratemyprofessors.com/search/professors/298?q=*")
remDr$findElement(using="xpath","//div[starts-with(@class,'FullPageModal__')]//button")$clickElement()
while (TRUE) {
# Try to find the "Show More" professors button
load_more <- tryCatch(
remDr$findElement(using = "xpath", "//button[text()='Show More']"),
error = function(e) NULL
)
# If the button is not found, break the loop
if (is.null(load_more)) {
message("No more 'Show More' professors button found. Stopping...")
break
}
# Try clicking the button
tryCatch(
{
load_more$clickElement()
y_position <- load_more$getElementLocation()$y - 300
remDr$executeScript(sprintf("window.scrollTo(0,%f)",y_position))
Sys.sleep(0.5)  # Small delay to allow content to load
},
error = function(e) {
message("Button is no longer clickable. Stopping...")
break
}
)
}
teacher_cards <- remDr$findElements(using="xpath","//a[starts-with(@class, 'TeacherCard__StyledTeacherCard')]")
teacher_urls <- map(teacher_cards, ~.$getElementAttribute("href") %>% unlist())
collect_prof <- function(card) {
prof_id <- card$getElementAttribute("href") %>%
unlist() %>%
str_extract("\\d+")
prof_name <- card$findChildElement(using="xpath","(.//div[starts-with(@class, 'CardName__StyledCardName')])")$getElementText() %>%
unlist()
quality <- card$findChildElement(using="xpath","(.//div[starts-with(@class, 'CardNumRating__CardNumRatingNumber')])")$getElementText() %>%
unlist() %>%
as.numeric()
card_feedback <- card$findElement(using="xpath", ".//div[starts-with(@class, 'CardFeedback__StyledCardFeedback')]")
card_feedback_items <- card_feedback$findElements(using="xpath", ".//div[starts-with(@class, 'CardFeedback__CardFeedbackItem')]")
card_feedback_items_text <- card_feedback_items[[1]]$findElement(using="xpath", ".//div[starts-with(@class, 'CardFeedback__CardFeedbackNumber')]")$getElementText() %>%
unlist()
take_again <- str_extract(card_feedback_items_text, "\\d+%")
rating_count <- card$findChildElement(using="xpath","(.//div[starts-with(@class,'CardNumRating__CardNumRatingCount')])")$getElementText()
rating_count_numeric <- rating_count[[1]] %>%
str_extract("\\d+") %>%
as.numeric()
return(list(Professor_ID = prof_id,
Professor_Name = prof_name,
Quality = quality,
TakeAgain = take_again,
RatingCount = rating_count_numeric))
}
prof_info <- teacher_cards %>% map_dfr(~collect_prof(.))
collect_prof <- function(card) {
prof_id <- card$getElementAttribute("href") %>%
unlist() %>%
str_extract("\\d+")
prof_name <- card$findChildElement(using="xpath","(.//div[starts-with(@class, 'CardName__StyledCardName')])")$getElementText() %>%
unlist()
quality <- card$findChildElement(using="xpath","(.//div[starts-with(@class, 'CardNumRating__CardNumRatingNumber')])")$getElementText() %>%
unlist() %>%
as.numeric()
card_feedback <- card$findElement(using="xpath", ".//div[starts-with(@class, 'CardFeedback__StyledCardFeedback')]")
card_feedback_items <- card_feedback$findElements(using="xpath", ".//div[starts-with(@class, 'CardFeedback__CardFeedbackItem')]")
card_feedback_items_text <- card_feedback_items[[1]]$findElement(using="xpath", ".//div[starts-with(@class, 'CardFeedback__CardFeedbackNumber')]")$getElementText() %>%
unlist()
take_again <- str_extract(card_feedback_items_text, "\\d+%")
rating_count <- card$findChildElement(using="xpath","(.//div[starts-with(@class,'CardNumRating__CardNumRatingCount')])")$getElementText()
rating_count_numeric <- rating_count[[1]] %>%
str_extract("\\d+") %>%
as.numeric()
print("finish" + prof_name)
return(list(Professor_ID = prof_id,
Professor_Name = prof_name,
Quality = quality,
TakeAgain = take_again,
RatingCount = rating_count_numeric))
}
prof_info <- teacher_cards %>% map_dfr(~collect_prof(.))
collect_prof <- function(card) {
prof_id <- card$getElementAttribute("href") %>%
unlist() %>%
str_extract("\\d+")
prof_name <- card$findChildElement(using="xpath","(.//div[starts-with(@class, 'CardName__StyledCardName')])")$getElementText() %>%
unlist()
quality <- card$findChildElement(using="xpath","(.//div[starts-with(@class, 'CardNumRating__CardNumRatingNumber')])")$getElementText() %>%
unlist() %>%
as.numeric()
card_feedback <- card$findElement(using="xpath", ".//div[starts-with(@class, 'CardFeedback__StyledCardFeedback')]")
card_feedback_items <- card_feedback$findElements(using="xpath", ".//div[starts-with(@class, 'CardFeedback__CardFeedbackItem')]")
card_feedback_items_text <- card_feedback_items[[1]]$findElement(using="xpath", ".//div[starts-with(@class, 'CardFeedback__CardFeedbackNumber')]")$getElementText() %>%
unlist()
take_again <- str_extract(card_feedback_items_text, "\\d+%")
rating_count <- card$findChildElement(using="xpath","(.//div[starts-with(@class,'CardNumRating__CardNumRatingCount')])")$getElementText()
rating_count_numeric <- rating_count[[1]] %>%
str_extract("\\d+") %>%
as.numeric()
print(glue("Finished processing: {prof_name}"))
return(list(Professor_ID = prof_id,
Professor_Name = prof_name,
Quality = quality,
TakeAgain = take_again,
RatingCount = rating_count_numeric))
}
prof_info <- teacher_cards %>% map_dfr(~collect_prof(.))
library(tidyverse)
library(RSelenium)
library(netstat)
library(glue)
collect_prof <- function(card) {
prof_id <- card$getElementAttribute("href") %>%
unlist() %>%
str_extract("\\d+")
prof_name <- card$findChildElement(using="xpath","(.//div[starts-with(@class, 'CardName__StyledCardName')])")$getElementText() %>%
unlist()
quality <- card$findChildElement(using="xpath","(.//div[starts-with(@class, 'CardNumRating__CardNumRatingNumber')])")$getElementText() %>%
unlist() %>%
as.numeric()
card_feedback <- card$findElement(using="xpath", ".//div[starts-with(@class, 'CardFeedback__StyledCardFeedback')]")
card_feedback_items <- card_feedback$findElements(using="xpath", ".//div[starts-with(@class, 'CardFeedback__CardFeedbackItem')]")
card_feedback_items_text <- card_feedback_items[[1]]$findElement(using="xpath", ".//div[starts-with(@class, 'CardFeedback__CardFeedbackNumber')]")$getElementText() %>%
unlist()
take_again <- str_extract(card_feedback_items_text, "\\d+%")
rating_count <- card$findChildElement(using="xpath","(.//div[starts-with(@class,'CardNumRating__CardNumRatingCount')])")$getElementText()
rating_count_numeric <- rating_count[[1]] %>%
str_extract("\\d+") %>%
as.numeric()
print(glue("Finished processing: {prof_name}"))
return(list(Professor_ID = prof_id,
Professor_Name = prof_name,
Quality = quality,
TakeAgain = take_again,
RatingCount = rating_count_numeric))
}
prof_info <- teacher_cards %>% map_dfr(~collect_prof(.))
prof_info <- teacher_cards %>% map_dfr(~collect_prof(.))
first_20_cards <- head(teacher_cards, 20)
collect_prof <- function(card) {
# Extract all text in one go to minimize browser interaction
full_text <- card$getElementText() %>% unlist()
# Extract professor ID from the href attribute
prof_id <- card$getElementAttribute("href") %>% unlist() %>% str_extract("\\d+")
# Extract relevant fields from the full text
quality <- str_extract(full_text, "(?<=QUALITY\\n)\\d+(\\.\\d+)?") %>% as.numeric()
rating_count_numeric <- str_extract(full_text, "(?<=ratings\\n)\\d+") %>% as.numeric()
take_again <- str_extract(full_text, "\\d+%")
difficulty <- str_extract(full_text, "(?<=would take again\\n)\\d+(\\.\\d+)?") %>% as.numeric()
# Extract professor name (assuming it's the first line of full_text)
lines <- str_split(full_text, "\\n") %>% unlist()
prof_name <- lines[1]  # If professor name is always the first line
print(glue("Finished processing: {prof_name}"))
return(tibble(
Professor_ID = prof_id,
Professor_Name = prof_name,
Quality = quality,
TakeAgain = take_again,
RatingCount = rating_count_numeric,
Difficulty = difficulty
))
}
# Apply optimized function to all stored `teacher_cards`
new_prof_info <- first_20_cards %>% map_dfr(~collect_prof(.))
View(first_20_cards)
View(new_prof_info)
first_20_cards <- head(teacher_cards, 20)
collect_prof <- function(card) {
# Extract all text in one go to minimize browser interaction
full_text <- card$getElementText() %>% unlist()
# Extract professor ID from the href attribute
prof_id <- card$getElementAttribute("href") %>% unlist() %>% str_extract("\\d+")
prof_name <- card$findChildElement(using="xpath","(.//div[starts-with(@class, 'CardName__StyledCardName')])")$getElementText() %>%
unlist()
# Extract relevant fields from the full text
quality <- str_extract(full_text, "(?<=QUALITY\\n)\\d+(\\.\\d+)?") %>% as.numeric()
rating_count <- card$findChildElement(using="xpath","(.//div[starts-with(@class,'CardNumRating__CardNumRatingCount')])")$getElementText()
rating_count_numeric <- rating_count[[1]] %>%
str_extract("\\d+") %>%
as.numeric()
take_again <- str_extract(full_text, "\\d+%")
difficulty <- str_extract(full_text, "(?<=would take again\\n)\\d+(\\.\\d+)?") %>% as.numeric()
print(glue("Finished processing: {prof_name}"))
return(tibble(
Professor_ID = prof_id,
Professor_Name = prof_name,
Quality = quality,
TakeAgain = take_again,
RatingCount = rating_count_numeric,
Difficulty = difficulty
))
}
# Apply optimized function to all stored `teacher_cards`
new_prof_info <- first_20_cards %>% map_dfr(~collect_prof(.))
View(new_prof_info)
collect_prof <- function(card) {
# Extract all text in one go to minimize browser interaction
full_text <- card$getElementText() %>% unlist()
# Extract professor ID from the href attribute
prof_id <- card$getElementAttribute("href") %>% unlist() %>% str_extract("\\d+")
prof_name <- card$findChildElement(using="xpath","(.//div[starts-with(@class, 'CardName__StyledCardName')])")$getElementText() %>%
unlist()
# Extract relevant fields from the full text
quality <- str_extract(full_text, "(?<=QUALITY\\n)\\d+(\\.\\d+)?") %>% as.numeric()
rating_count <- card$findChildElement(using="xpath","(.//div[starts-with(@class,'CardNumRating__CardNumRatingCount')])")$getElementText()
rating_count_numeric <- rating_count[[1]] %>%
str_extract("\\d+") %>%
as.numeric()
take_again <- str_extract(full_text, "\\d+%")
difficulty <- str_extract(full_text, "(?<=would take again\\n)\\d+(\\.\\d+)?") %>% as.numeric()
print(glue("Finished processing: {prof_name}"))
return(tibble(
Professor_ID = prof_id,
Professor_Name = prof_name,
Quality = quality,
TakeAgain = take_again,
RatingCount = rating_count_numeric,
Difficulty = difficulty
))
}
# Apply optimized function to all stored `teacher_cards`
new_prof_info <- teacher_cards %>% map_dfr(~collect_prof(.))
View(new_prof_info)
write_csv(new_prof_info, "professors_data.csv")
remote_driver_object$server$stop()
